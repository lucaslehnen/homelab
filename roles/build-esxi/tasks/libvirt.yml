---
- name: "Verificando necessidade de customizar iso"
  stat:
    path: "/var/lib/libvirt/images/esxi7.iso"
  register: out_custom_iso

- name: "Gerando a imagem customizada"
  when: not out_custom_iso.stat.exists
  block:
    - name: "Instalando o pacote de geração de ISO"
      apt: 
        name: genisoimage
        state: present  

    - name: "Criando pasta de montagem"
      file:
        path: "/mnt/esxi"
        state: directory    

    - name: "Download da ISO Original"
      get_url:
        url: "{{ cache_server_address }}/{{ esxi.install_iso.name }}"
        dest: /tmp/esxi7.iso      

    - name: "Montando a ISO original"  
      mount:
        src: /tmp/esxi7.iso
        path: /mnt/esxi    
        fstype: iso9660
        opts: loop
        state: mounted
        fstab: /tmp/tmp.fstab      

    - name: "Copiando os arquivos para edição"
      copy: 
        remote_src: true
        src: "/mnt/esxi/"
        dest: "/tmp/esxi-custom/"
        mode: preserve      
        force: yes      

    - name: "Editando os parâmetros de boot para o kickstart"  
      replace:
        path: /tmp/esxi-custom/boot.cfg
        regexp: 'kernelopt=runweasel cdromBoot'
        replace: "kernelopt=runweasel cdromBoot ks={{ cache_server_address }}/ks.txt --ip={{ esxi.address }} --netmask={{ esxi.netmask }} --gateway={{ esxi.gateway }} --nameserver={{ esxi.nameserver }}"

    - name: "Construindo a nova ISO"
      shell:
        cmd: "genisoimage -l -r -J -b isolinux.bin -no-emul-boot -boot-load-size 4 \
          -boot-info-table -c boot.cat -o /var/lib/libvirt/images/esxi7.iso /tmp/esxi-custom"  

- name: "Copiando arquivo de KickStart para o servidor de cache"
  template: 
    src: "ks.cfg.j2"
    dest: "/var/www/isos/ks.txt"
    owner: "root"
    mode: 0775

# Se existir, quer dizer que já foi instalada
- name: Verifica se a VM ja foi instalada
  shell: 
    cmd: "virsh list --all"
  changed_when: false  
  register: out_esxi_installed

- name: "Instala o ESXi"
  when: "out_esxi_installed.stdout.find('esxi') < 0"      
  block:
    - name: "Virt Install"
      shell:
        cmd: |
          virt-install \
            --name=esxi \
            --cpu host-passthrough \
            --ram 12000 \
            --vcpus=8 \
            --os-type linux --os-variant=generic \
            --cdrom /var/lib/libvirt/images/esxi7.iso \
            --network bridge=br0,model=e1000e \
            --graphics vnc,listen=0.0.0.0 --video qxl \
            --disk pool=default,size=20,bus=sata,format=qcow2 \
            --disk pool=default,size=60,bus=sata,format=qcow2 \
            --boot cdrom,hd --noautoconsole --force \
            --feature kvm_hidden=on --machine q35
      register: esxi

    - name: "Atenção: " 
      debug:
        msg: "Você pode conectar com um cliente VNC para acompanhar o andamento da instalação..."
  
    - name: "Wait install finish"  
      shell: "virsh list --all"
      register: wait_shutdown
      until: wait_shutdown.stdout.find(" -    esxi") >= 0  
      delay: 120
      retries: 12
      changed_when: false

- name: Verifica se a VM esta rodando
  shell: 
    cmd: "virsh list --all"
  changed_when: false  
  register: out_esxi_started

- name: "Start VM"
  shell: 
    cmd: |
      virsh start esxi
  when: "out_esxi_started.stdout.find(' -    esxi') >= 0"
  changed_when: true
  